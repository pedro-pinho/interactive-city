{"_id":"cloudant","_rev":"40-77daf9080bd5d39b3eab98f4e9178e04","name":"cloudant","description":"Cloudant Node.js client","dist-tags":{"latest":"1.10.0"},"versions":{"0.1.0":{"name":"cloudant","description":"Cloudant Node.js client","license":"Apache 2.0","homepage":"http://github.com/cloudant/nodejs-cloudant","repository":{"type":"git","url":"git://github.com/cloudant/nodejs-cloudant"},"version":"0.1.0","author":{"name":"Jason Smith","email":"jason@cloudant.com"},"contributors":[],"keywords":["cloudant","couchdb","json","nosql","database"],"dependencies":{"request":"~2.33.0","follow":"~0.11.2","errs":"~0.2.4","underscore":"~1.5.1"},"devDependencies":{"async":"~0.2.9","specify":"~1.2.0","nock":"~0.18.2"},"scripts":{"test-cloudant":"env NOCK=on sh tests/cloudant/run-tests.sh","test-cloudant-live":"sh tests/cloudant/run-tests.sh","test":"node node_modules/specify/bin/specify -e NOCK=on","compact":"node node_modules/specify/bin/specify -e NOCK=on -r compact","nock_off":"node node_modules/specify/bin/specify"},"main":"./nano.js","engines":{"node":">=0.6.0"},"bugs":{"url":"https://github.com/cloudant/nodejs-cloudant/issues"},"_id":"cloudant@0.1.0","dist":{"shasum":"b8fe602dac0348be07286c8556db3b2b5902ddfd","tarball":"https://registry.npmjs.org/cloudant/-/cloudant-0.1.0.tgz"},"_from":".","_npmVersion":"1.3.24","_npmUser":{"name":"jhs","email":"jhs@iriscouch.com"},"maintainers":[{"name":"jhs","email":"jhs@iriscouch.com"}],"directories":{}},"1.0.0-beta2":{"name":"cloudant","description":"Cloudant Node.js client","license":"Apache 2.0","homepage":"http://github.com/cloudant/nodejs-cloudant","repository":{"type":"git","url":"git://github.com/cloudant/nodejs-cloudant"},"version":"1.0.0-beta2","author":{"name":"Jason Smith","email":"jason@cloudant.com"},"contributors":[],"keywords":["cloudant","couchdb","json","nosql","database"],"dependencies":{"request":"~2.33.0","follow":"~0.11.2","errs":"~0.2.4","underscore":"~1.5.1"},"devDependencies":{"async":"~0.2.9","specify":"~1.2.0","nock":"~0.18.2"},"scripts":{"test-cloudant":"env NOCK=on sh tests/cloudant/run-tests.sh","test-cloudant-live":"sh tests/cloudant/run-tests.sh","test":"node node_modules/specify/bin/specify -e NOCK=on","compact":"node node_modules/specify/bin/specify -e NOCK=on -r compact","nock_off":"node node_modules/specify/bin/specify"},"main":"./nano.js","engines":{"node":">=0.6.0"},"bugs":{"url":"https://github.com/cloudant/nodejs-cloudant/issues"},"_id":"cloudant@1.0.0-beta2","dist":{"shasum":"95e80ea41a9400f6ccff24609c5c2bd1526944a7","tarball":"https://registry.npmjs.org/cloudant/-/cloudant-1.0.0-beta2.tgz"},"_from":".","_npmVersion":"1.3.24","_npmUser":{"name":"jhs","email":"jhs@iriscouch.com"},"maintainers":[{"name":"jhs","email":"jhs@iriscouch.com"}],"directories":{}},"1.0.0-beta3":{"name":"cloudant","description":"Cloudant Node.js client","license":"Apache 2.0","homepage":"http://github.com/cloudant/nodejs-cloudant","repository":{"type":"git","url":"git://github.com/cloudant/nodejs-cloudant"},"version":"1.0.0-beta3","author":{"name":"Jason Smith","email":"jason@cloudant.com"},"contributors":[],"keywords":["cloudant","couchdb","json","nosql","database"],"dependencies":{"request":"~2.33.0","follow":"~0.11.2","errs":"~0.2.4","underscore":"~1.5.1"},"devDependencies":{"async":"~0.2.9","specify":"~1.2.0","nock":"~0.18.2"},"scripts":{"test-cloudant":"env NOCK=on sh tests/cloudant/run-tests.sh","test-cloudant-live":"sh tests/cloudant/run-tests.sh","test":"node node_modules/specify/bin/specify -e NOCK=on","compact":"node node_modules/specify/bin/specify -e NOCK=on -r compact","nock_off":"node node_modules/specify/bin/specify"},"main":"./nano.js","engines":{"node":">=0.6.0"},"bugs":{"url":"https://github.com/cloudant/nodejs-cloudant/issues"},"_id":"cloudant@1.0.0-beta3","dist":{"shasum":"e5d29bd8d5c7a4952877ee407f5cb8d27efb5d44","tarball":"https://registry.npmjs.org/cloudant/-/cloudant-1.0.0-beta3.tgz"},"_from":".","_npmVersion":"1.3.24","_npmUser":{"name":"jhs","email":"jhs@iriscouch.com"},"maintainers":[{"name":"jhs","email":"jhs@iriscouch.com"}],"directories":{}},"1.0.0":{"name":"cloudant","description":"Cloudant Node.js client","license":"Apache 2.0","homepage":"http://github.com/cloudant/nodejs-cloudant","repository":{"type":"git","url":"git://github.com/cloudant/nodejs-cloudant"},"version":"1.0.0","author":{"name":"Jason Smith","email":"jason@cloudant.com"},"keywords":["cloudant","couchdb","json","nosql","database"],"dependencies":{"request":"^2.53.0","follow":"^0.11.4","errs":"^0.3.0","underscore":"^1.7.0","debug":"^2.0.0"},"devDependencies":{"async":"^0.9.0","tape":"^3.0.0","istanbul":"^0.3.2","jshint":"^2.5.6","jscs":"^1.7.0","nock":"^0.48.1","endswith":"^0.0.0","tape-it":"^0.3.1","pre-commit":"0.0.9"},"scripts":{"test-cloudant":"tape tests/integration/cloudant/*.js","test-cloudant-live":"NOCK_OFF=true tape tests/integration/cloudant/*.js","test":"DEBUG=* NOCK_OFF=true istanbul cover tape tests/*/*/*.js","unmocked":"NOCK_OFF=true tape tests/*/*/*.js","mocked":"tape tests/*/*/*.js","jshint":"jshint tests/*/*/*.js lib/*.js","codestyle":"jscs -p google tests/*/*/*.js lib/*.js","coverage":"open coverage/lcov-report/index.html","checkcoverage":"istanbul check-coverage --statements 100 --functions 100 --lines 100 --branches 100"},"main":"./lib/nano.js","engines":{"node":">=0.8.0"},"pre-commit":["jshint","codestyle","mocked","test","checkcoverage"],"gitHead":"d01837ddbd7a213521c7d9c104cfbafb24e3c65c","bugs":{"url":"https://github.com/cloudant/nodejs-cloudant/issues"},"_id":"cloudant@1.0.0","_shasum":"41495dd4d3d6d3421ef603d1b29ea500e8932547","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"jhs","email":"jason.h.smith@gmail.com"},"maintainers":[{"name":"jhs","email":"jason.h.smith@gmail.com"},{"name":"glynnbird","email":"glynn.bird@gmail.com"},{"name":"mikerhodes","email":"mike.rhodes@dx13.co.uk"}],"dist":{"shasum":"41495dd4d3d6d3421ef603d1b29ea500e8932547","tarball":"https://registry.npmjs.org/cloudant/-/cloudant-1.0.0.tgz"},"directories":{}},"1.1.0":{"name":"cloudant","description":"Cloudant Node.js client","license":"Apache 2.0","homepage":"http://github.com/cloudant/nodejs-cloudant","repository":{"type":"git","url":"git://github.com/cloudant/nodejs-cloudant"},"version":"1.1.0","author":{"name":"Jason Smith","email":"jason@cloudant.com"},"contributors":[{"name":"Glynn Bird","email":"glynn.bird@gmail.com"}],"keywords":["cloudant","couchdb","json","nosql","database"],"dependencies":{"debug":"^2.2.0","nano":"6.1.3"},"devDependencies":{"dotenv":"^1.1.0","mocha":"^2.2.5","nock":"^0.48.1","should":"^6.0.3"},"scripts":{"test":"mocha tests/*.js","test-verbose":"env DEBUG='*,-mocha:*' npm run test","test-live":"NOCK_OFF=true mocha --timeout=5000 tests/*.js","test-live-verbose":"env DEBUG='*,-mocha:*' npm run test-live"},"main":"./cloudant.js","engines":{"node":">=0.8.0"},"gitHead":"b61b6402ca6301fd50d956403bfbd551cd4241a6","bugs":{"url":"https://github.com/cloudant/nodejs-cloudant/issues"},"_id":"cloudant@1.1.0","_shasum":"d01ee5c6adf01122cf11bb05bb104893a0d8d011","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"jhs","email":"jason.h.smith@gmail.com"},"maintainers":[{"name":"jhs","email":"jason.h.smith@gmail.com"},{"name":"glynnbird","email":"glynn.bird@gmail.com"},{"name":"mikerhodes","email":"mike.rhodes@dx13.co.uk"}],"dist":{"shasum":"d01ee5c6adf01122cf11bb05bb104893a0d8d011","tarball":"https://registry.npmjs.org/cloudant/-/cloudant-1.1.0.tgz"},"directories":{}},"1.2.0":{"name":"cloudant","description":"Cloudant Node.js client","license":"Apache 2.0","homepage":"http://github.com/cloudant/nodejs-cloudant","repository":{"type":"git","url":"git://github.com/cloudant/nodejs-cloudant"},"version":"1.2.0","author":{"name":"Jason Smith","email":"jason@cloudant.com"},"contributors":[{"name":"Glynn Bird","email":"glynn.bird@gmail.com"}],"keywords":["cloudant","couchdb","json","nosql","database"],"dependencies":{"debug":"^2.2.0","nano":"6.1.4"},"devDependencies":{"dotenv":"^1.1.0","mocha":"^2.2.5","nock":"^0.48.1","should":"^6.0.3"},"scripts":{"test":"mocha tests/*.js","test-verbose":"env DEBUG='*,-mocha:*' npm run test","test-live":"NOCK_OFF=true mocha --timeout=5000 tests/*.js","test-live-verbose":"env DEBUG='*,-mocha:*' npm run test-live"},"main":"./cloudant.js","engines":{"node":">=0.8.0"},"gitHead":"4aea845a7456a0e1ab54df123566d44195b8f93d","bugs":{"url":"https://github.com/cloudant/nodejs-cloudant/issues"},"_id":"cloudant@1.2.0","_shasum":"f4e9acf92128e086b815b65bca99eeba5c303f5f","_from":".","_npmVersion":"2.7.1","_nodeVersion":"1.6.2","_npmUser":{"name":"jhs","email":"jason.h.smith@gmail.com"},"maintainers":[{"name":"jhs","email":"jason.h.smith@gmail.com"},{"name":"glynnbird","email":"glynn.bird@gmail.com"},{"name":"mikerhodes","email":"mike.rhodes@dx13.co.uk"}],"dist":{"shasum":"f4e9acf92128e086b815b65bca99eeba5c303f5f","tarball":"https://registry.npmjs.org/cloudant/-/cloudant-1.2.0.tgz"},"directories":{}},"1.3.0":{"name":"cloudant","description":"Cloudant Node.js client","license":"Apache-2.0","homepage":"http://github.com/cloudant/nodejs-cloudant","repository":{"type":"git","url":"git://github.com/cloudant/nodejs-cloudant.git"},"version":"1.3.0","author":{"name":"Jason Smith","email":"jason@cloudant.com"},"contributors":[{"name":"Glynn Bird","email":"glynn.bird@gmail.com"}],"keywords":["cloudant","couchdb","json","nosql","database"],"dependencies":{"debug":"^2.2.0","nano":"6.1.5"},"devDependencies":{"dotenv":"^1.1.0","mocha":"^2.2.5","nock":"^2.10.0","should":"^6.0.3"},"scripts":{"test":"mocha tests/*.js","test-verbose":"env DEBUG='*,-mocha:*' npm run test","test-live":"NOCK_OFF=true mocha --timeout=5000 tests/*.js","test-live-verbose":"env DEBUG='*,-mocha:*' npm run test-live"},"main":"./cloudant.js","engines":{"node":">=0.8.0"},"gitHead":"9ca1ba5d419c1b16c64b7d8915d9b020c065712a","bugs":{"url":"https://github.com/cloudant/nodejs-cloudant/issues"},"_id":"cloudant@1.3.0","_shasum":"e41039047707261f07396945e78216cea462dcbd","_from":".","_npmVersion":"2.11.3","_nodeVersion":"0.12.7","_npmUser":{"name":"jhs","email":"jason.h.smith@gmail.com"},"maintainers":[{"name":"jhs","email":"jason.h.smith@gmail.com"},{"name":"glynnbird","email":"glynn.bird@gmail.com"},{"name":"mikerhodes","email":"mike.rhodes@dx13.co.uk"}],"dist":{"shasum":"e41039047707261f07396945e78216cea462dcbd","tarball":"https://registry.npmjs.org/cloudant/-/cloudant-1.3.0.tgz"},"directories":{}},"1.3.1":{"name":"cloudant","description":"Cloudant Node.js client","license":"Apache-2.0","homepage":"http://github.com/cloudant/nodejs-cloudant","repository":{"type":"git","url":"git://github.com/cloudant/nodejs-cloudant.git"},"version":"1.3.1","author":{"name":"Jason Smith","email":"jason@cloudant.com"},"contributors":[{"name":"Glynn Bird","email":"glynn.bird@gmail.com"}],"keywords":["cloudant","couchdb","json","nosql","database"],"dependencies":{"debug":"2.2.0","nano":"6.1.5"},"devDependencies":{"dotenv":"1.2.0","mocha":"2.3.3","nock":"2.13.0","should":"6.0.3"},"scripts":{"test":"mocha tests/*.js","test-verbose":"env DEBUG='*,-mocha:*' npm run test","test-live":"NOCK_OFF=true mocha --timeout=5000 tests/*.js","test-live-verbose":"env DEBUG='*,-mocha:*' npm run test-live"},"main":"./cloudant.js","engines":{"node":">=0.8.0"},"gitHead":"26a2166df4ed23b9ad1223e5f444cb6a242991f8","bugs":{"url":"https://github.com/cloudant/nodejs-cloudant/issues"},"_id":"cloudant@1.3.1","_shasum":"0a2d33d4d3fd65be9b618695c46c984a05ab730e","_from":".","_npmVersion":"2.14.7","_nodeVersion":"4.2.3","_npmUser":{"name":"jhs","email":"jason.h.smith@gmail.com"},"dist":{"shasum":"0a2d33d4d3fd65be9b618695c46c984a05ab730e","tarball":"https://registry.npmjs.org/cloudant/-/cloudant-1.3.1.tgz"},"maintainers":[{"name":"jhs","email":"jason.h.smith@gmail.com"},{"name":"glynnbird","email":"glynn.bird@gmail.com"},{"name":"mikerhodes","email":"mike.rhodes@dx13.co.uk"}],"directories":{}},"1.4.0":{"name":"cloudant","description":"Cloudant Node.js client","license":"Apache-2.0","homepage":"http://github.com/cloudant/nodejs-cloudant","repository":{"type":"git","url":"git://github.com/cloudant/nodejs-cloudant.git"},"version":"1.4.0","author":{"name":"Jason Smith","email":"jason@cloudant.com"},"contributors":[{"name":"Glynn Bird","email":"glynn.bird@gmail.com"}],"keywords":["cloudant","couchdb","json","nosql","database"],"dependencies":{"debug":"2.2.0","nano":"6.2.0"},"devDependencies":{"dotenv":"1.2.0","mocha":"2.3.3","nock":"2.13.0","should":"6.0.3"},"scripts":{"test":"mocha tests/*.js","test-verbose":"env DEBUG='*,-mocha:*' npm run test","test-live":"NOCK_OFF=true mocha --timeout=5000 tests/*.js","test-live-verbose":"env DEBUG='*,-mocha:*' npm run test-live"},"main":"./cloudant.js","engines":{"node":">=0.8.0"},"gitHead":"d5162c08d858232067815b40dea1eaf1b3acabbf","bugs":{"url":"https://github.com/cloudant/nodejs-cloudant/issues"},"bundleDependencies":["nano"],"_id":"cloudant@1.4.0","_shasum":"c32ce2eab4b2c2454171494e607f79ef77922247","_from":".","_npmVersion":"2.14.2","_nodeVersion":"4.0.0","_npmUser":{"name":"jhs","email":"jason.h.smith@gmail.com"},"dist":{"shasum":"c32ce2eab4b2c2454171494e607f79ef77922247","tarball":"https://registry.npmjs.org/cloudant/-/cloudant-1.4.0.tgz"},"maintainers":[{"name":"jhs","email":"jason.h.smith@gmail.com"},{"name":"glynnbird","email":"glynn.bird@gmail.com"},{"name":"mikerhodes","email":"mike.rhodes@dx13.co.uk"}],"directories":{}},"1.4.1":{"name":"cloudant","description":"Cloudant Node.js client","license":"Apache-2.0","homepage":"http://github.com/cloudant/nodejs-cloudant","repository":{"type":"git","url":"git://github.com/cloudant/nodejs-cloudant.git"},"version":"1.4.1","author":{"name":"Jason Smith","email":"jason@cloudant.com"},"contributors":[{"name":"Glynn Bird","email":"glynn.bird@gmail.com"}],"keywords":["cloudant","couchdb","json","nosql","database"],"dependencies":{"debug":"2.2.0","nano":"6.2.0"},"devDependencies":{"dotenv":"1.2.0","mocha":"2.3.3","nock":"2.13.0","should":"6.0.3"},"scripts":{"test":"mocha tests/*.js","test-verbose":"env DEBUG='*,-mocha:*' npm run test","test-live":"NOCK_OFF=true mocha --timeout=5000 tests/*.js","test-live-verbose":"env DEBUG='*,-mocha:*' npm run test-live"},"main":"./cloudant.js","engines":{"node":">=0.8.0"},"gitHead":"ab5b1d103684c0c16aacd50df80b8f4ee29a2c1b","bugs":{"url":"https://github.com/cloudant/nodejs-cloudant/issues"},"_id":"cloudant@1.4.1","_shasum":"476245b7aa7191e3dfda5aed75a15c9257b87388","_from":".","_npmVersion":"2.14.2","_nodeVersion":"4.0.0","_npmUser":{"name":"jhs","email":"jason.h.smith@gmail.com"},"dist":{"shasum":"476245b7aa7191e3dfda5aed75a15c9257b87388","tarball":"https://registry.npmjs.org/cloudant/-/cloudant-1.4.1.tgz"},"maintainers":[{"name":"jhs","email":"jason.h.smith@gmail.com"},{"name":"glynnbird","email":"glynn.bird@gmail.com"},{"name":"mikerhodes","email":"mike.rhodes@dx13.co.uk"}],"directories":{}},"1.4.2":{"name":"cloudant","description":"Cloudant Node.js client","license":"Apache-2.0","homepage":"http://github.com/cloudant/nodejs-cloudant","repository":{"type":"git","url":"git://github.com/cloudant/nodejs-cloudant.git"},"version":"1.4.2","author":{"name":"Jason Smith","email":"jason@cloudant.com"},"contributors":[{"name":"Glynn Bird","email":"glynn.bird@gmail.com"}],"keywords":["cloudant","couchdb","json","nosql","database"],"dependencies":{"debug":"2.2.0","nano":"6.2.0"},"devDependencies":{"dotenv":"1.2.0","mocha":"2.3.3","nock":"2.13.0","should":"6.0.3"},"scripts":{"test":"mocha tests/*.js","test-verbose":"env DEBUG='*,-mocha:*' npm run test","test-live":"NOCK_OFF=true mocha --timeout=5000 tests/*.js","test-live-verbose":"env DEBUG='*,-mocha:*' npm run test-live"},"main":"./cloudant.js","engines":{"node":">=0.8.0"},"gitHead":"e173edb7c161cb57ac294c5259ddf7bcb0b7fe70","bugs":{"url":"https://github.com/cloudant/nodejs-cloudant/issues"},"_id":"cloudant@1.4.2","_shasum":"05be4fe476718d5486928db1bcaa316c042ecc13","_from":".","_npmVersion":"3.8.9","_nodeVersion":"6.2.0","_npmUser":{"name":"jhs","email":"jason.h.smith@gmail.com"},"dist":{"shasum":"05be4fe476718d5486928db1bcaa316c042ecc13","tarball":"https://registry.npmjs.org/cloudant/-/cloudant-1.4.2.tgz"},"maintainers":[{"name":"jhs","email":"jason.h.smith@gmail.com"},{"name":"glynnbird","email":"glynn.bird@gmail.com"},{"name":"mikerhodes","email":"mike.rhodes@dx13.co.uk"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/cloudant-1.4.2.tgz_1464865446106_0.07358096120879054"},"directories":{}},"1.4.3":{"name":"cloudant","description":"Cloudant Node.js client","license":"Apache-2.0","homepage":"http://github.com/cloudant/nodejs-cloudant","repository":{"type":"git","url":"git://github.com/cloudant/nodejs-cloudant.git"},"version":"1.4.3","author":{"name":"Jason Smith","email":"jason@cloudant.com"},"contributors":[{"name":"Glynn Bird","email":"glynn.bird@gmail.com"}],"keywords":["cloudant","couchdb","json","nosql","database"],"dependencies":{"debug":"2.2.0","nano":"6.2.0"},"devDependencies":{"dotenv":"1.2.0","mocha":"2.3.3","nock":"2.13.0","should":"6.0.3"},"scripts":{"test":"mocha tests/*.js","test-verbose":"env DEBUG='*,-mocha:*' npm run test","test-live":"NOCK_OFF=true mocha --timeout=5000 tests/*.js","test-live-verbose":"env DEBUG='*,-mocha:*' npm run test-live"},"main":"./cloudant.js","engines":{"node":">=0.8.0"},"gitHead":"11511e52400f228baba0a2f7bf31b973d385100e","bugs":{"url":"https://github.com/cloudant/nodejs-cloudant/issues"},"_id":"cloudant@1.4.3","_shasum":"7d3c33ca919fdd459b3be4a66f1ef823aeb5270f","_from":".","_npmVersion":"3.8.9","_nodeVersion":"6.2.0","_npmUser":{"name":"jhs","email":"jason.h.smith@gmail.com"},"dist":{"shasum":"7d3c33ca919fdd459b3be4a66f1ef823aeb5270f","tarball":"https://registry.npmjs.org/cloudant/-/cloudant-1.4.3.tgz"},"maintainers":[{"name":"jhs","email":"jason.h.smith@gmail.com"},{"name":"glynnbird","email":"glynn.bird@gmail.com"},{"name":"mikerhodes","email":"mike.rhodes@dx13.co.uk"}],"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/cloudant-1.4.3.tgz_1470336619436_0.4261197473388165"},"directories":{}},"1.5.0":{"name":"cloudant","description":"Cloudant Node.js client","license":"Apache-2.0","homepage":"http://github.com/cloudant/nodejs-cloudant","repository":{"type":"git","url":"git://github.com/cloudant/nodejs-cloudant.git"},"version":"1.5.0","author":{"name":"Jason Smith","email":"jason@cloudant.com"},"contributors":[{"name":"Glynn Bird","email":"glynn.bird@gmail.com"}],"keywords":["cloudant","couchdb","json","nosql","database"],"dependencies":{"async":"^2.0.1","debug":"2.2.0","nano":"6.2.0","request":"^2.53.0"},"devDependencies":{"dotenv":"1.2.0","mocha":"2.3.3","nock":"2.13.0","should":"6.0.3"},"scripts":{"test":"mocha tests/*.js","test-verbose":"env DEBUG='*,-mocha:*' npm run test","test-live":"NOCK_OFF=true mocha --timeout=5000 tests/*.js","test-live-verbose":"env DEBUG='*,-mocha:*' npm run test-live"},"main":"./cloudant.js","engines":{"node":">=0.8.0"},"gitHead":"ec9acecbe23cc98ffaaaa292101cd3aa9a1928ac","bugs":{"url":"https://github.com/cloudant/nodejs-cloudant/issues"},"_id":"cloudant@1.5.0","_shasum":"b575e8d9fadc4d298ac3cea43d1ea0d7ca200598","_from":".","_npmVersion":"3.8.6","_nodeVersion":"5.12.0","_npmUser":{"name":"glynnbird","email":"glynn.bird@gmail.com"},"maintainers":[{"name":"jhs","email":"jason.h.smith@gmail.com"},{"name":"glynnbird","email":"glynn.bird@gmail.com"},{"name":"mikerhodes","email":"mike.rhodes@dx13.co.uk"}],"dist":{"shasum":"b575e8d9fadc4d298ac3cea43d1ea0d7ca200598","tarball":"https://registry.npmjs.org/cloudant/-/cloudant-1.5.0.tgz"},"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/cloudant-1.5.0.tgz_1474526995115_0.21132416115142405"},"directories":{}},"1.5.1":{"name":"cloudant","description":"Cloudant Node.js client","license":"Apache-2.0","homepage":"http://github.com/cloudant/nodejs-cloudant","repository":{"type":"git","url":"git://github.com/cloudant/nodejs-cloudant.git"},"version":"1.5.1","author":{"name":"Jason Smith","email":"jason@cloudant.com"},"contributors":[{"name":"Glynn Bird","email":"glynn.bird@gmail.com"}],"keywords":["cloudant","couchdb","json","nosql","database"],"dependencies":{"async":"^2.0.1","debug":"2.2.0","nano":"6.2.0","request":"^2.53.0"},"devDependencies":{"dotenv":"1.2.0","mocha":"2.3.3","nock":"2.13.0","should":"6.0.3"},"scripts":{"test":"mocha tests/*.js","test-verbose":"env DEBUG='*,-mocha:*' npm run test","test-live":"NOCK_OFF=true mocha --timeout=5000 tests/*.js","test-live-verbose":"env DEBUG='*,-mocha:*' npm run test-live"},"main":"./cloudant.js","engines":{"node":">=0.8.0"},"gitHead":"0175894937145690589c65c8c0b6eed451df3f55","bugs":{"url":"https://github.com/cloudant/nodejs-cloudant/issues"},"_id":"cloudant@1.5.1","_shasum":"6c9848fef68671728c9a9ae51ee17545dea82f6a","_from":".","_npmVersion":"3.8.6","_nodeVersion":"5.12.0","_npmUser":{"name":"glynnbird","email":"glynn.bird@gmail.com"},"maintainers":[{"name":"jhs","email":"jason.h.smith@gmail.com"},{"name":"glynnbird","email":"glynn.bird@gmail.com"},{"name":"mikerhodes","email":"mike.rhodes@dx13.co.uk"}],"dist":{"shasum":"6c9848fef68671728c9a9ae51ee17545dea82f6a","tarball":"https://registry.npmjs.org/cloudant/-/cloudant-1.5.1.tgz"},"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/cloudant-1.5.1.tgz_1475996204273_0.4639351658988744"},"directories":{}},"1.5.2":{"name":"cloudant","description":"Cloudant Node.js client","license":"Apache-2.0","homepage":"http://github.com/cloudant/nodejs-cloudant","repository":{"type":"git","url":"git://github.com/cloudant/nodejs-cloudant.git"},"version":"1.5.2","author":{"name":"Jason Smith","email":"jason@cloudant.com"},"contributors":[{"name":"Glynn Bird","email":"glynn.bird@gmail.com"}],"keywords":["cloudant","couchdb","json","nosql","database"],"dependencies":{"async":"^2.0.1","debug":"2.2.0","nano":"6.2.0","request":"^2.53.0"},"devDependencies":{"dotenv":"1.2.0","mocha":"2.3.3","nock":"2.13.0","should":"6.0.3"},"scripts":{"test":"mocha tests/*.js","test-verbose":"env DEBUG='*,-mocha:*' npm run test","test-live":"NOCK_OFF=true mocha --timeout=5000 tests/*.js","test-live-verbose":"env DEBUG='*,-mocha:*' npm run test-live"},"main":"./cloudant.js","engines":{"node":">=0.8.0"},"gitHead":"f45667b86187fa423b31f2075cbf177cd95556ce","bugs":{"url":"https://github.com/cloudant/nodejs-cloudant/issues"},"_id":"cloudant@1.5.2","_shasum":"c34d69c711ff214c70607d6950d8fe496f4a5916","_from":".","_npmVersion":"3.8.6","_nodeVersion":"5.12.0","_npmUser":{"name":"glynnbird","email":"glynn.bird@gmail.com"},"maintainers":[{"name":"jhs","email":"jason.h.smith@gmail.com"},{"name":"glynnbird","email":"glynn.bird@gmail.com"},{"name":"mikerhodes","email":"mike.rhodes@dx13.co.uk"}],"dist":{"shasum":"c34d69c711ff214c70607d6950d8fe496f4a5916","tarball":"https://registry.npmjs.org/cloudant/-/cloudant-1.5.2.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/cloudant-1.5.2.tgz_1477929967167_0.31108216964639723"},"directories":{}},"1.6.0":{"name":"cloudant","description":"Cloudant Node.js client","license":"Apache-2.0","homepage":"http://github.com/cloudant/nodejs-cloudant","repository":{"type":"git","url":"git://github.com/cloudant/nodejs-cloudant.git"},"version":"1.6.0","author":{"name":"Jason Smith","email":"jasons@us.ibm.com"},"contributors":[{"name":"Glynn Bird","email":"glynn.bird@gmail.com"}],"keywords":["cloudant","couchdb","json","nosql","database"],"dependencies":{"async":"2.1.2","debug":"2.2.0","cloudant-nano":"6.4.0","request":"2.76.0"},"devDependencies":{"dotenv":"2.0.0","mocha":"3.1.2","nock":"9.0.0","should":"6.0.3"},"scripts":{"test":"mocha tests/*.js","test-verbose":"env DEBUG='*,-mocha:*' npm run test","test-live":"NOCK_OFF=true mocha --timeout=5000 tests/*.js","test-live-verbose":"env DEBUG='*,-mocha:*' npm run test-live"},"main":"./cloudant.js","engines":{"node":">=0.8.0"},"gitHead":"c1fccbaff9f5592c131f9cde48a74ce62f940f5c","bugs":{"url":"https://github.com/cloudant/nodejs-cloudant/issues"},"_id":"cloudant@1.6.0","_shasum":"e45a5a797bf4bcd695f6e19070d791ab1799a77a","_from":".","_npmVersion":"3.8.6","_nodeVersion":"5.12.0","_npmUser":{"name":"glynnbird","email":"glynn.bird@gmail.com"},"maintainers":[{"name":"jhs","email":"jason.h.smith@gmail.com"},{"name":"glynnbird","email":"glynn.bird@gmail.com"},{"name":"mikerhodes","email":"mike.rhodes@dx13.co.uk"}],"dist":{"shasum":"e45a5a797bf4bcd695f6e19070d791ab1799a77a","tarball":"https://registry.npmjs.org/cloudant/-/cloudant-1.6.0.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/cloudant-1.6.0.tgz_1478616809636_0.7699845193419605"},"directories":{}},"1.6.1":{"name":"cloudant","description":"Cloudant Node.js client","license":"Apache-2.0","homepage":"http://github.com/cloudant/nodejs-cloudant","repository":{"type":"git","url":"git://github.com/cloudant/nodejs-cloudant.git"},"version":"1.6.1","author":{"name":"Jason Smith","email":"jasons@us.ibm.com"},"contributors":[{"name":"Glynn Bird","email":"glynn.bird@gmail.com"}],"keywords":["cloudant","couchdb","json","nosql","database"],"dependencies":{"async":"2.1.2","debug":"2.2.0","cloudant-nano":"6.4.0","request":"2.76.0"},"devDependencies":{"dotenv":"2.0.0","mocha":"3.1.2","nock":"9.0.0","should":"6.0.3"},"scripts":{"test":"mocha tests/*.js","test-verbose":"env DEBUG='*,-mocha:*' npm run test","test-live":"NOCK_OFF=true mocha --timeout=5000 tests/*.js","test-live-verbose":"env DEBUG='*,-mocha:*' npm run test-live"},"main":"./cloudant.js","engines":{"node":">=0.8.0"},"gitHead":"22c08d0aa6c0a63eca96a5b0ac492eb220d6c69f","bugs":{"url":"https://github.com/cloudant/nodejs-cloudant/issues"},"_id":"cloudant@1.6.1","_shasum":"aa6c6080a5a5311ae8add6b876ae36a474ee6d0c","_from":".","_npmVersion":"3.8.6","_nodeVersion":"5.12.0","_npmUser":{"name":"glynnbird","email":"glynn.bird@gmail.com"},"maintainers":[{"name":"jhs","email":"jason.h.smith@gmail.com"},{"name":"glynnbird","email":"glynn.bird@gmail.com"},{"name":"mikerhodes","email":"mike.rhodes@dx13.co.uk"}],"dist":{"shasum":"aa6c6080a5a5311ae8add6b876ae36a474ee6d0c","tarball":"https://registry.npmjs.org/cloudant/-/cloudant-1.6.1.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/cloudant-1.6.1.tgz_1478618124834_0.9024287243373692"},"directories":{}},"1.6.2":{"name":"cloudant","description":"Cloudant Node.js client","license":"Apache-2.0","homepage":"http://github.com/cloudant/nodejs-cloudant","repository":{"type":"git","url":"git://github.com/cloudant/nodejs-cloudant.git"},"version":"1.6.2","author":{"name":"Jason Smith","email":"jasons@us.ibm.com"},"contributors":[{"name":"Glynn Bird","email":"glynn.bird@gmail.com"}],"keywords":["cloudant","couchdb","json","nosql","database"],"dependencies":{"async":"2.1.2","debug":"2.2.0","cloudant-nano":"6.4.1","request":"2.76.0"},"devDependencies":{"dotenv":"2.0.0","mocha":"3.1.2","nock":"9.0.0","should":"6.0.3"},"scripts":{"test":"mocha tests/*.js","test-verbose":"env DEBUG='*,-mocha:*' npm run test","test-live":"NOCK_OFF=true mocha --timeout=5000 tests/*.js","test-live-verbose":"env DEBUG='*,-mocha:*' npm run test-live"},"main":"./cloudant.js","engines":{"node":">=0.8.0"},"gitHead":"bbb1676d33816b625d9c55ea2f4a27e2b8c915f4","bugs":{"url":"https://github.com/cloudant/nodejs-cloudant/issues"},"_id":"cloudant@1.6.2","_shasum":"63a0ed6140a67feae5bb318105966a1f1252ac08","_from":".","_npmVersion":"3.8.6","_nodeVersion":"5.12.0","_npmUser":{"name":"glynnbird","email":"glynn.bird@gmail.com"},"maintainers":[{"name":"jhs","email":"jason.h.smith@gmail.com"},{"name":"glynnbird","email":"glynn.bird@gmail.com"},{"name":"mikerhodes","email":"mike.rhodes@dx13.co.uk"}],"dist":{"shasum":"63a0ed6140a67feae5bb318105966a1f1252ac08","tarball":"https://registry.npmjs.org/cloudant/-/cloudant-1.6.2.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/cloudant-1.6.2.tgz_1478794302213_0.32055647810921073"},"directories":{}},"1.7.0":{"name":"cloudant","description":"Cloudant Node.js client","license":"Apache-2.0","homepage":"http://github.com/cloudant/nodejs-cloudant","repository":{"type":"git","url":"git://github.com/cloudant/nodejs-cloudant.git"},"version":"1.7.0","author":{"name":"Jason Smith","email":"jasons@us.ibm.com"},"contributors":[{"name":"Glynn Bird","email":"glynn.bird@gmail.com"}],"keywords":["cloudant","couchdb","json","nosql","database"],"dependencies":{"async":"2.1.2","debug":"2.2.0","cloudant-nano":"6.4.1","request":"2.76.0"},"devDependencies":{"dotenv":"2.0.0","mocha":"3.1.2","nock":"9.0.0","should":"6.0.3"},"scripts":{"test":"mocha tests/*.js","test-verbose":"env DEBUG='*,-mocha:*' npm run test","test-live":"NOCK_OFF=true mocha --timeout=5000 tests/*.js","test-live-verbose":"env DEBUG='*,-mocha:*' npm run test-live"},"main":"./cloudant.js","engines":{"node":">=0.8.0"},"gitHead":"69f6b0edb218ec0882bc6ec5fb6a546a260b4017","bugs":{"url":"https://github.com/cloudant/nodejs-cloudant/issues"},"_id":"cloudant@1.7.0","_shasum":"d354a2643cde43f7d8cc3280270ebc942504c0da","_from":".","_npmVersion":"3.8.6","_nodeVersion":"5.12.0","_npmUser":{"name":"glynnbird","email":"glynn.bird@gmail.com"},"maintainers":[{"name":"jhs","email":"jason.h.smith@gmail.com"},{"name":"glynnbird","email":"glynn.bird@gmail.com"},{"name":"mikerhodes","email":"mike.rhodes@dx13.co.uk"}],"dist":{"shasum":"d354a2643cde43f7d8cc3280270ebc942504c0da","tarball":"https://registry.npmjs.org/cloudant/-/cloudant-1.7.0.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/cloudant-1.7.0.tgz_1484311262502_0.005339691415429115"},"directories":{}},"1.7.1":{"name":"cloudant","description":"Cloudant Node.js client","license":"Apache-2.0","homepage":"http://github.com/cloudant/nodejs-cloudant","repository":{"type":"git","url":"git://github.com/cloudant/nodejs-cloudant.git"},"version":"1.7.1","author":{"name":"Jason Smith","email":"jasons@us.ibm.com"},"contributors":[{"name":"Glynn Bird","email":"glynn.bird@gmail.com"}],"keywords":["cloudant","couchdb","json","nosql","database"],"dependencies":{"async":"2.1.2","debug":"2.2.0","cloudant-nano":"6.4.1","request":"2.76.0"},"devDependencies":{"dotenv":"2.0.0","mocha":"3.1.2","nock":"9.0.0","should":"6.0.3"},"scripts":{"test":"mocha tests/*.js","test-verbose":"env DEBUG='*,-mocha:*' npm run test","test-live":"NOCK_OFF=true mocha --timeout=5000 tests/*.js","test-live-verbose":"env DEBUG='*,-mocha:*' npm run test-live"},"main":"./cloudant.js","engines":{"node":">=0.8.0"},"gitHead":"410638395b32b144ca3e0e83e0ccd8cca4728464","bugs":{"url":"https://github.com/cloudant/nodejs-cloudant/issues"},"_id":"cloudant@1.7.1","_shasum":"d52c4328eec7109a806c4a9c1d08243f7342d737","_from":".","_npmVersion":"3.8.6","_nodeVersion":"5.12.0","_npmUser":{"name":"glynnbird","email":"glynn.bird@gmail.com"},"maintainers":[{"name":"jhs","email":"jason.h.smith@gmail.com"},{"name":"glynnbird","email":"glynn.bird@gmail.com"},{"name":"mikerhodes","email":"mike.rhodes@dx13.co.uk"}],"dist":{"shasum":"d52c4328eec7109a806c4a9c1d08243f7342d737","tarball":"https://registry.npmjs.org/cloudant/-/cloudant-1.7.1.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/cloudant-1.7.1.tgz_1486387309572_0.22953135473653674"},"directories":{}},"1.8.0":{"name":"cloudant","description":"Cloudant Node.js client","license":"Apache-2.0","homepage":"http://github.com/cloudant/nodejs-cloudant","repository":{"type":"git","url":"git+ssh://git@github.com/cloudant/nodejs-cloudant.git"},"version":"1.8.0","author":{"name":"IBM Cloudant","email":"support@cloudant.com"},"contributors":[{"name":"Glynn Bird","email":"glynn.bird@gmail.com"}],"keywords":["cloudant","couchdb","json","nosql","database"],"dependencies":{"async":"2.1.2","debug":"2.2.0","cloudant-nano":"6.5.0","request":"2.76.0"},"devDependencies":{"dotenv":"2.0.0","mocha":"3.1.2","nock":"9.0.0","nsp":"^2.6.3","should":"6.0.3"},"scripts":{"test":"mocha tests/*.js && nsp check","test-verbose":"env DEBUG='*,-mocha:*' npm run test","test-live":"NOCK_OFF=true mocha --timeout=5000 tests/*.js","test-live-verbose":"env DEBUG='*,-mocha:*' npm run test-live"},"main":"./cloudant.js","engines":{"node":">=0.8.0"},"gitHead":"a6f226fb9c85f39dffd35546df67bf17e4108e18","bugs":{"url":"https://github.com/cloudant/nodejs-cloudant/issues"},"_id":"cloudant@1.8.0","_shasum":"8b453f00206b89cacf87a49c0e626f50359ffe52","_from":".","_npmVersion":"3.10.10","_nodeVersion":"6.9.5","_npmUser":{"name":"glynnbird","email":"glynn.bird@gmail.com"},"maintainers":[{"name":"jhs","email":"jason.h.smith@gmail.com"},{"name":"glynnbird","email":"glynn.bird@gmail.com"},{"name":"mikerhodes","email":"mike.rhodes@dx13.co.uk"}],"dist":{"shasum":"8b453f00206b89cacf87a49c0e626f50359ffe52","tarball":"https://registry.npmjs.org/cloudant/-/cloudant-1.8.0.tgz"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/cloudant-1.8.0.tgz_1495554788495_0.7475333537440747"},"directories":{}},"1.9.0":{"name":"cloudant","description":"Cloudant Node.js client","license":"Apache-2.0","homepage":"http://github.com/cloudant/nodejs-cloudant","repository":{"type":"git","url":"git+ssh://git@github.com/cloudant/nodejs-cloudant.git"},"version":"1.9.0","author":{"name":"IBM Cloudant","email":"support@cloudant.com"},"contributors":[{"name":"Glynn Bird","email":"glynn.bird@gmail.com"}],"keywords":["cloudant","couchdb","json","nosql","database"],"dependencies":{"async":"2.1.2","cloudant-nano":"6.6.0","debug":"^3.1.0","request":"^2.81.0"},"devDependencies":{"eslint":"^3.19.0","eslint-plugin-standard":"^3.0.1","eslint-plugin-import":"^2.2.0","eslint-plugin-node":"^5.1.0","eslint-plugin-promise":"^3.5.0","eslint-plugin-react":"^7.0.0","eslint-config-standard":"^10.2.1","eslint-config-semistandard":"^11.0.0","eslint-plugin-header":"^1.0.0","dotenv":"2.0.0","mocha":"3.1.2","nock":"9.0.0","nsp":"^2.6.3","should":"6.0.3","uuid":"^3.0.1"},"scripts":{"test":"eslint --ignore-path .eslintignore . && mocha && nsp check","test-verbose":"env DEBUG='*,-mocha:*' npm run test","test-live":"NOCK_OFF=true mocha","test-live-verbose":"env DEBUG='*,-mocha:*' npm run test-live"},"main":"./cloudant.js","engines":{"node":">=0.8.0"},"gitHead":"b174c4d32320bac58cfdcaf9c24fc72bcc4b761a","bugs":{"url":"https://github.com/cloudant/nodejs-cloudant/issues"},"_id":"cloudant@1.9.0","_shasum":"664aa1eaf0632ee364f562680a2102689de5687a","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.10.0","_npmUser":{"name":"smithsz","email":"sam.smith@uk.ibm.com"},"dist":{"shasum":"664aa1eaf0632ee364f562680a2102689de5687a","tarball":"https://registry.npmjs.org/cloudant/-/cloudant-1.9.0.tgz"},"maintainers":[{"name":"glynnbird","email":"glynn.bird@gmail.com"},{"name":"jhs","email":"jason.h.smith@gmail.com"},{"name":"mikerhodes","email":"mike.rhodes@dx13.co.uk"},{"name":"smithsz","email":"sam.smith@uk.ibm.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/cloudant-1.9.0.tgz_1509379179486_0.3842766380403191"},"directories":{}},"1.10.0":{"name":"cloudant","description":"Cloudant Node.js client","license":"Apache-2.0","homepage":"http://github.com/cloudant/nodejs-cloudant","repository":{"type":"git","url":"git+ssh://git@github.com/cloudant/nodejs-cloudant.git"},"version":"1.10.0","author":{"name":"IBM Cloudant","email":"support@cloudant.com"},"contributors":[{"name":"Glynn Bird","email":"glynn.bird@gmail.com"}],"keywords":["cloudant","couchdb","json","nosql","database"],"dependencies":{"async":"2.1.2","cloudant-nano":"6.7.0","debug":"^3.1.0","request":"^2.81.0"},"devDependencies":{"eslint":"^3.19.0","eslint-plugin-standard":"^3.0.1","eslint-plugin-import":"^2.2.0","eslint-plugin-node":"^5.1.0","eslint-plugin-promise":"^3.5.0","eslint-plugin-react":"^7.0.0","eslint-config-standard":"^10.2.1","eslint-config-semistandard":"^11.0.0","eslint-plugin-header":"^1.0.0","dotenv":"2.0.0","mocha":"3.1.2","nock":"9.0.0","nsp":"^2.6.3","should":"6.0.3","uuid":"^3.0.1"},"scripts":{"test":"eslint --ignore-path .eslintignore . && mocha && nsp check","test-verbose":"env DEBUG='*,-mocha:*' npm run test","test-live":"NOCK_OFF=true mocha","test-live-verbose":"env DEBUG='*,-mocha:*' npm run test-live"},"main":"./cloudant.js","engines":{"node":">=4.8.2"},"gitHead":"3a2bfdeaca6739e3896724190c1e07b1442ccf6d","bugs":{"url":"https://github.com/cloudant/nodejs-cloudant/issues"},"_id":"cloudant@1.10.0","_shasum":"64c99ca1912923c4f5261e51fd18fd1718f90374","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.10.0","_npmUser":{"name":"smithsz","email":"sam.smith@uk.ibm.com"},"dist":{"shasum":"64c99ca1912923c4f5261e51fd18fd1718f90374","tarball":"https://registry.npmjs.org/cloudant/-/cloudant-1.10.0.tgz"},"maintainers":[{"name":"glynnbird","email":"glynn.bird@gmail.com"},{"name":"jhs","email":"jason.h.smith@gmail.com"},{"name":"mikerhodes","email":"mike.rhodes@dx13.co.uk"},{"name":"smithsz","email":"sam.smith@uk.ibm.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/cloudant-1.10.0.tgz_1509535686783_0.9881584059912711"},"directories":{}}},"readme":"# Cloudant Node.js Client\n\nThis is the official Cloudant library for Node.js.\n\n[![Build Status](https://travis-ci.org/cloudant/nodejs-cloudant.svg?branch=master)](https://travis-ci.org/cloudant/nodejs-cloudant)\n\n* [Installation and Usage](#installation-and-usage)\n* [Getting Started](#getting-started)\n  * [Initialization](#initialization)\n  * [Callback Signature](#callback-signature)\n  * [Password Authentication](#password-authentication)\n  * [Cloudant Local](#cloudant-local)\n  * [Request Plugins](#request-plugins)\n* [API Reference](#api-reference)\n* [Authorization and API Keys](#authorization-and-api-keys)\n  * [Generate an API key](#generate-an-api-key)\n  * [Use an API Key](#use-an-api-key)\n* [CORS](#cors)\n* [Virtual Hosts](#virtual-hosts)\n* [Cloudant Query](#cloudant-query)\n* [Cloudant Search](#cloudant-search)\n* [Cookie Authentication](#cookie-authentication)\n* [Advanced Features](#advanced-features)\n  * [Advanced Configuration](#advanced-configuration)\n  * [Pool size and open sockets](#pool-size-and-open-sockets)\n  * [Extending the Cloudant Library](#extending-the-cloudant-library)\n  * [Pipes](#pipes)\n* [Development and Contribution](#development-and-contribution)\n  * [Local Development](#local-development)\n  * [Test Suite](#test-suite)\n  * [Using in Other Projects](#using-in-other-projects)\n  * [Security Note](#security-note)\n* [License](#license)\n* [Reference](#reference)\n\n\n## Installation and Usage\n\nThe best way to use the Cloudant client is to begin with your own Node.js project, and define this work as your dependency. In other words, put me in your package.json dependencies. The `npm` tool can do this for you, from the command line:\n\n    $ npm install --save cloudant\n\nNotice that your package.json will now reflect this package. Everything is working if you can run this command with no errors:\n\n    $ node -e 'require(\"cloudant\"); console.log(\"Cloudant works\");'\n    Cloudant works\n\n### Getting Started\n\nNow it's time to begin doing real work with Cloudant and Node.js.\n\nInitialize your Cloudant connection by supplying your *account* and *password*, and supplying a callback function to run when everything is ready.\n\n~~~ js\n// Load the Cloudant library.\nvar Cloudant = require('cloudant');\n\nvar me = 'nodejs'; // Set this to your own account\nvar password = process.env.cloudant_password;\n\n// Initialize the library with my account.\nvar cloudant = Cloudant({account:me, password:password});\n\ncloudant.db.list(function(err, allDbs) {\n  console.log('All my databases: %s', allDbs.join(', '))\n});\n~~~\n\nPossible output (depending on your databases, of course):\n\n     All my databases: example_db, jasons_stuff, scores\n\nUpper-case `Cloudant` is this package you load using `require()`, while lower-case `cloudant` represents an authenticated, confirmed connection to your Cloudant service.\n\nIf you omit the \"password\" field, you will get an \"anonymous\" connection: a client that sends no authentication information (no passwords, no cookies, etc.)\n\nTo use the example code as-is, you must first install the `dotenv` package from npm, then create a `.env` file with your Cloudant credentials. For example:\n\n~~~\nnpm install dotenv                               # Install ./node_modules/dotenv\necho \"/.env\"                       >> .gitignore # Do not track .env in the revision history\necho \"cloudant_username=myaccount\" >  .env       # Replace myaccount with your account name\necho \"cloudant_password='secret'\"  >> .env       # Replace secret with your password\n~~~\n\nHere is simple but complete example of working with data:\n\n~~~ js\nrequire('dotenv').load();\n\n// Load the Cloudant library.\nvar Cloudant = require('cloudant');\n\n// Initialize Cloudant with settings from .env\nvar username = process.env.cloudant_username || \"nodejs\";\nvar password = process.env.cloudant_password;\nvar cloudant = Cloudant({account:username, password:password});\n\n// Remove any existing database called \"alice\".\ncloudant.db.destroy('alice', function(err) {\n\n  // Create a new \"alice\" database.\n  cloudant.db.create('alice', function() {\n\n    // Specify the database we are going to use (alice)...\n    var alice = cloudant.db.use('alice')\n\n    // ...and insert a document in it.\n    alice.insert({ crazy: true }, 'rabbit', function(err, body, header) {\n      if (err) {\n        return console.log('[alice.insert] ', err.message);\n      }\n\n      console.log('You have inserted the rabbit.');\n      console.log(body);\n    });\n  });\n});\n~~~\n\nIf you run this example, you will see:\n\n    You have inserted the rabbit.\n    { ok: true,\n      id: 'rabbit',\n      rev: '1-6e4cb465d49c0368ac3946506d26335d' }\n\nYou can find a further CRUD example in the [example](https://github.com/cloudant/nodejs-cloudant/tree/master/example) directory of this project.\n\n### Initialization\n\nTo use Cloudant, `require('cloudant')` in your code. That will return the initialization function. Run that function, passing your account name and password, and an optional callback. (And see the [security note](#security-note) about placing your password into your source code.\n\nIn general, the common style is that `Cloudant` (upper-case) is the **package** you load; wheareas `cloudant` (lower-case) is your connection to your database--the result of calling `Cloudant()`:\n\n~~~ js\nvar Cloudant = require('cloudant');\nvar cloudant = Cloudant({account:me, password:password});\n~~~\n\nIf you would prefer, you can also initialize Cloudant with a URL:\n\n~~~ js\nvar Cloudant = require('cloudant')\nvar cloudant = Cloudant(\"https://MYUSERNAME:MYPASSWORD@MYACCOUNT.cloudant.com\");\n~~~\n\nRunning on Bluemix? You can initialize Cloudant directly from the `VCAP_SERVICES` environment variable:\n\n~~~ js\nvar Cloudant = require('cloudant');\nvar cloudant = Cloudant({instanceName: 'foo', vcapServices: JSON.parse(process.env.VCAP_SERVICES)});\n~~~\n\nNote, if you only have a single Cloudant service then specifying the `instanceName` isn't required.\n\nYou can optionally provide a callback to the Cloudant initialization function. This will make the library automatically \"ping\" Cloudant to confirm the connection and that your credentials work.\n\nHere is a simple example of initializing asychronously, using its optional callback parameter:\n\n~~~ js\nvar Cloudant = require('cloudant');\nvar me = 'nodejs'; // Replace with your account.\nvar password = process.env.cloudant_password;\n\nCloudant({account:me, password:password}, function(err, cloudant) {\n  if (err) {\n    return console.log('Failed to initialize Cloudant: ' + err.message);\n  }\n\n  var db = cloudant.db.use(\"animals\");\n  db.get(\"dog\", function(err, data) {\n    // The rest of your code goes here. For example:\n    console.log(\"Found dog:\", data);\n  });\n});\n~~~\n\n### Callback Signature\n\nAfter initialization, in general, callback functions receive three arguments:\n\n* `err` - the error, if any\n* `body` - the http _response body_ from Cloudant, if no error.\n* `header` - the http _response header_ from Cloudant, if no error\n\nThe `ping()` function is the only exception to this rule. It does not return headers since a \"ping\" is made from multiple requests to gather various bits of information.\n\n### Password Authentication\n\nBy default, when you connect to your cloudant account (i.e. \"me.cloudant.com\"), you authenticate as the account owner (i.e. \"me\"). However, you can use Cloudant with any username and password. Just provide an additional \"username\" option when you initialize Cloudant. This will connect to your account, but using the username as the authenticated user. (And of course, use the appropriate password.)\n\n~~~ js\nvar Cloudant = require('cloudant');\nvar me = \"nodejs\";         // Substitute with your Cloudant user account.\nvar otherUsername = \"jhs\"; // Substitute with some other Cloudant user account.\nvar otherPassword = process.env.other_cloudant_password;\n\nCloudant({account:me, username:otherUsername, password:otherPassword}, function(er, cloudant, reply) {\n  if (er) {\n    throw er;\n  }\n\n  console.log('Connected with username: %s', reply.userCtx.name);\n});\n~~~\n\n### Cloudant Local\n\nIf you use Cloudant Local, everything works exactly the same, except you provide a *url* parameter to indicate which server to use:\n\n~~~ js\nCloudant({url:\"companycloudant.local\", username:\"somebody\", password:\"somebody's secret\"}, function(er, cloudant, reply) {\n  if (er)\n    throw er\n\n  console.log('Connected with username: %s', reply.userCtx.name)\n})\n~~~\n\n### Request Plugins\n\nThis library can be used with one of these `request` plugins:\n\n1. `default` - the default [request](https://www.npmjs.com/package/request) library plugin. This uses Node.js's callbacks to communicate Cloudant's replies\nback to your app and can be used to stream data using the Node.js [Stream API](https://nodejs.org/api/stream.html).\n2. `promises` - if you'd prefer to write code in the Promises style then the \"promises\" plugin turns each request into a Promise. This plugin cannot be used to\nstream data because instead of returning the HTTP request, we are simply returning a Promise instead.\n3. `retry` - on occasion, Cloudant's multi-tenant offerring may reply with an HTTP 429 response because you've exceed the number of API requests in a given amount of time.\nThe \"retry\" plugin will automatically retry your request with exponential back-off. The 'retry' plugin can be used to stream data.\n4. `cookieauth` - this plugin will automatically swap your Cloudant credentials for a cookie transparently for you. It will handle the authentication for you\nand ensure that the cookie is refreshed. The 'cookieauth' plugin can be used to stream data.\n5. custom plugin - you may also supply your own function which will be called to make API calls.\n\n#### The 'promises' Plugins\n\nWhen initialising the Cloudant library, you can opt to use the 'promises' plugin:\n\n```js\nvar cloudant = Cloudant({url: myurl, plugin:'promises'});\nvar mydb = cloudant.db.use('mydb');\n```\n\nThen the library will return a Promise for every asynchronous call:\n\n```js\nmydb.list().then(function(data) {\n  console.log(data);\n}).catch(function(err) {\n  console.log('something went wrong', err);\n});\n```\n\n#### The 'retry' plugin\n\nWhen initialising the Cloudant library, you can opt to use the 'retry' plugin:\n\n```js\nvar cloudant = Cloudant({url: myurl, plugin:'retry'});\nvar mydb = cloudant.db.use('mydb');\n```\n\nThen use the Cloudant library normally. You may also opt to configure the retry parameters:\n\n- retryAttempts - the maximum number of times the request will be attempted (default 3)\n- retryTimeout - the number of milliseconds after the first attempt that the second request will be tried; the timeout doubling with each subsequent attempt  (default 500)\n\n```js\nvar cloudant = Cloudant({url: myurl, plugin:'retry', retryAttempts:5, retryTimeout:1000 });\nvar mydb = cloudant.db.use('mydb');\n```\n\n#### The 'cookieauth' plugin\n\nWhen initialising the Cloudant library, you can opt to use the 'cookieauth' plugin:\n\n```js\nvar cloudant = Cloudant({url: myurl, plugin:'cookieauth'});\nvar mydb = cloudant.db.use('mydb');\nmydb.get('mydoc', function(err, data) {\n\n});\n```\n\nThe above code will transparently call `POST /_session` to exchange your credentials for a cookie and then call `GET /mydoc` to fetch the document.\n\nSubsequent calls to the same `cloudant` instance will simply use cookie authentication from that point. The library will automatically ensure that the cookie remains\nup-to-date by calling Cloudant on an hourly basis to refresh the cookie.\n\n#### Custom plugin\n\nWhen initialising the Cloudant library, you can supply your own plugin function:\n\n```js  \n  var doNothingPlugin = function(opts, callback) {\n    // don't do anything, just pretend that everything's ok.\n    callback(null, { statusCode:200 }, { ok: true});\n  };\n  var cloudant = Cloudant({url: myurl, plugin: doNothingPlugin});\n```\n\nWhenever the Cloudant library wishes to make an outgoing HTTP request, it will call your function instead of `request`.\n\n## API Reference\n\nCloudant is a wrapper around the Nano library and as such, Nano's documentation should be consulted for:\n\n- [Database functions](https://github.com/cloudant-labs/cloudant-nano#database-functions)\n- [Document functions](https://github.com/cloudant-labs/cloudant-nano#document-functions)\n- [Multipart functions](https://github.com/cloudant-labs/cloudant-nano#multipart-functions)\n- [Attachment functions](https://github.com/cloudant-labs/cloudant-nano#attachments-functions)\n- [View and Design functions](https://github.com/cloudant-labs/cloudant-nano#views-and-design-functions)\n\nThis library adds documentation for the following:\n\n- [Authorization and API Keys](#authorization-and-api-keys)\n  - [Generate an API key](#generate-an-api-key)\n  - [Use an API Key](#use-an-api-key)\n- [CORS](#cors)\n- [Cloudant Query](#cloudant-query)\n- [Cloudant Search](#cloudant-search)\n- [Cloudant Geospatial](#cloudant-geospatial)\n- [Cookie Authentication](#cookie-authentication)\n- [Advanced Features](#advanced-features)\n  - [Advanced Configuration](#advanced-configuration)\n  - [Pool size and open sockets](#pool-size-and-open-sockets)\n  - [Extending the Cloudant Library](#extending-the-cloudant-library)\n  - [Pipes](#pipes)\n- [Development](#development)\n  - [Test Suite](#test-suite)\n  - [Using in Other Projects](#using-in-other-projects)\n- [License](#license)\n- [Reference](#reference)\n\n\n## Authorization and API Keys\n\nThis feature interfaces with the Cloudant [authorization API][Authorization].\n\nUse the authorization feature to generate new API keys to access your data. An API key is basically a username/password pair for granting others access to your data, without giving them the keys to the castle.\n\n### Generate an API key\n\n~~~ js\nvar Cloudant = require('cloudant');\nvar me = 'nodejs'; // Replace with your account.\nvar password = process.env.cloudant_password;\nvar cloudant = Cloudant({account:me, password:password});\n\ncloudant.generate_api_key(function(er, api) {\n  if (er) {\n    throw er; // You probably want wiser behavior than this.\n  }\n\n  console.log('API key: %s', api.key);\n  console.log('Password for this key: %s', api.password);\n  console.log('');\n\n  // Set the security for three users: nobody, nodejs, and the above API key.\n  // (The \"nodejs\" user is an example account that belongs to IBM Cloudant.)\n  var db = \"animals\";\n  var security = {\n    nobody: [],\n    nodejs : [ '_reader', '_writer', '_admin', '_replicator' ]\n  };\n  security[api.key] = [ '_reader', '_writer' ];\n\n  var my_database = cloudant.db.use(db);\n  my_database.set_security(security, function(er, result) {\n    if (er) {\n      throw er;\n    }\n\n    console.log('Set security for ' + db);\n    console.log(result);\n    console.log('');\n\n    // Or you can read the security settings from a database.\n    my_database.get_security(function(er, result) {\n      if (er) {\n        throw er;\n      }\n\n      console.log('Got security for ' + db);\n      console.log(result);\n    });\n  });\n});\n~~~\n\nOutput:\n\n    API key: thandoodstrenterprourete\n    Password for this key: Eivln4jPiLS8BoTxjXjVukDT\n\n    Set security for animals\n    { ok: true }\n\n    Got security for animals\n    { cloudant:\n      { nobody: [],\n        thandoodstrenterprourete: [ '_reader', '_writer' ],\n        nodejs: [ '_reader', '_writer', '_admin', '_replicator' ] } }\n\nSee the Cloudant API for full details](https://docs.cloudant.com/api.html#authorization)\n\n### Use an API Key\n\nTo use an API key, initialize a new Cloudant connection, and provide an additional \"key\" option when you initialize Cloudant. This will connect to your account, but using the \"key\" as the authenticated user. (And of course, use the appropriate password associated with the API key.)\n\n~~~ js\nvar Cloudant = require('cloudant');\nvar cloudant = Cloudant({account:\"me\", key:api.key, password:api.password});\n~~~\n\n## CORS\n\nIf you need to access your Cloudant database from a web application that is served from a domain other than your Cloudant account, you will need to enable CORS (Cross-origin resource sharing).\n\ne.g. enable CORS from any domain:\n\n~~~ js\ncloudant.set_cors({ enable_cors: true, allow_credentials: true, origins: [\"*\"]}, function(err, data) {\n  console.log(err, data);\n});\n~~~\n\nor enable access from a list of specified domains:\n\n~~~ js\ncloudant.set_cors({ enable_cors: true, allow_credentials: true, origins: [ \"https://mydomain.com\",\"https://mysubdomain.mydomain.com\"]}, function(err, data) {\n  console.log(err, data);\n});\n~~~\n\nor disable CORS access\n\n~~~ js\ncloudant.set_cors({ enable_cors: false, origins: [] }, function(err, data) {\n  console.log(err, data);\n});\n~~~\n\nor to fetch the current CORS configuration\n\n~~~ js\ncloudant.get_cors(function(err, data) {\n  console.log(data);\n});\n~~~\n\nOutput:\n\n    { enable_cors: true, allow_credentials: true, origins: [ '*' ] }\n\nSee <https://docs.cloudant.com/api.html#cors> for further details.\n\n\n## Virtual Hosts\n\nIf you wish to access your Cloudant domain name (myaccount.cloudant.com) using a CNAME'd domain name (mysubdomain.mydomain.com) then you can\ninstruct Cloudant to do so.\n\ne.g. add a virtual host\n~~~ js\ncloudant.add_virtual_host({ host: \"mysubdomain.mydomain.com\", path: \"/mypath\"}, function(err, data) {\n  console.log(err, data);\n});\n~~~\n\ne.g. view virtual host configuration\n\n~~~ js\ncloudant.get_virtual_hosts(function(err, data) {\n  console.log(err, data);\n});\n~~~\n\nor delete a virtual host\n~~~ js\ncloudant.delete_virtual_host({ host: \"mysubdomain.mydomain.com\", path: \"/mypath\"}, function(err, data) {\n  console.log(err, data);\n});\n~~~\n\n## Cloudant Query\n\nThis feature interfaces with Cloudant's query functionality. See the [Cloudant Query documentation][Cloudant Query] for details.\n\nAs with Nano, when working with a database (as opposed to the root server), run the `.db.use()` method.\n\n~~~ js\nvar db = cloudant.db.use('my_db')\n~~~\n\nTo see all the indexes in a database, call the database `.index()` method with a callback function.\n\n~~~ js\ndb.index(function(er, result) {\n  if (er) {\n    throw er;\n  }\n\n  console.log('The database has %d indexes', result.indexes.length);\n  for (var i = 0; i < result.indexes.length; i++) {\n    console.log('  %s (%s): %j', result.indexes[i].name, result.indexes[i].type, result.indexes[i].def);\n  }\n\n  result.should.have.a.property('indexes').which.is.an.Array;\n  done();\n});\n~~~\n\nExample output:\n\n    The database has 3 indexes\n      _all_docs (special): {\"fields\":[{\"_id\":\"asc\"}]}\n      first-name (json): {\"fields\":[{\"name\":\"asc\"}]}\n      last-name (json): {\"fields\":[{\"name\":\"asc\"}]}\n\nTo create an index, use the same `.index()` method but with an extra initial argument: the index definition. For example, to make an index on middle names in the data set:\n\n~~~ js\nvar first_name = {name:'first-name', type:'json', index:{fields:['name']}}\ndb.index(first_name, function(er, response) {\n  if (er) {\n    throw er;\n  }\n\n  console.log('Index creation result: %s', response.result);\n});\n~~~\n\nOutput:\n\n    Index creation result: created\n\nTo query using the index, use the `.find()` method.\n\n~~~ js\ndb.find({selector:{name:'Alice'}}, function(er, result) {\n  if (er) {\n    throw er;\n  }\n\n  console.log('Found %d documents with name Alice', result.docs.length);\n  for (var i = 0; i < result.docs.length; i++) {\n    console.log('  Doc id: %s', result.docs[i]._id);\n  }\n});\n~~~\n\n\n## Cloudant Search\n\nThis feature interfaces with Cloudant's search functionality. See the [Cloudant Search documentation][Cloudant Search] for details.\n\nFirst, when working with a database (as opposed to the root server), run the `.use()` method.\n\n~~~ js\nvar db = cloudant.db.use('my_db')\n~~~\n\nIn this example, we will begin with some data to search: a collection of books.\n\n~~~\nvar books = [\n  {author:\"Charles Dickens\", title:\"David Copperfield\"},\n  {author:\"David Copperfield\", title:\"Tales of the Impossible\"},\n  {author:\"Charles Dickens\", title:\"Great Expectation\"}\n]\n\ndb.bulk({docs:books}, function(er) {\n  if (er) {\n    throw er;\n  }\n\n  console.log('Inserted all documents');\n});\n~~~\n\nTo create a Cloudant Search index, create a design document the normal way you would with Nano, the database `.insert()` method.\n\nTo see all the indexes in a database, call the database `.index()` method with a callback function.\n\n~~~ js\n// Note, you can make a normal JavaScript function. It is not necessary\n// for you to convert it to a string as with other languages and tools.\nvar book_indexer = function(doc) {\n  if (doc.author && doc.title) {\n    // This looks like a book.\n    index('title', doc.title);\n    index('author', doc.author);\n  }\n}\n\nvar ddoc = {\n  _id: '_design/library',\n  indexes: {\n    books: {\n      analyzer: {name: 'standard'},\n      index   : book_indexer\n    }\n  }\n};\n\ndb.insert(ddoc, function (er, result) {\n  if (er) {\n    throw er;\n  }\n\n  console.log('Created design document with books index');\n});\n~~~\n\nTo query this index, use the database `.search()` method. The first argument is the design document name, followed by the index name, and finally an object with your search parameters.\n\n~~~ js\ndb.search('library', 'books', {q:'author:dickens'}, function(er, result) {\n  if (er) {\n    throw er;\n  }\n\n  console.log('Showing %d out of a total %d books by Dickens', result.rows.length, result.total_rows);\n  for (var i = 0; i < result.rows.length; i++) {\n    console.log('Document id: %s', result.rows[i].id);\n  }\n});\n~~~\n\n## Cloudant Geospatial\n\nThis feature interfaces with Cloudant's geospatial features. See the [Cloudant Geospatial documentation][Cloudant Geospatial] for details.\n\nBegin with a database, and insert documents in [GeoJSON format][geojson]. Documents should have `\"type\"` set to `\"Feature\"` and also `\"geometry\"` with a valid GeoJSON value. For example:\n\n~~~ js\nvar db = cloudant.db.use('my_db')\nvar cities = [\n  { \"_id\":\"Boston\",\n    \"type\":\"Feature\",\n    \"geometry\": {\n      \"type\":\"Point\",\"coordinates\": [-71.063611, 42.358056]\n    }\n  },\n  { \"_id\":\"Houston\",\n    \"type\":\"Feature\",\n    \"geometry\": {\n      \"type\":\"Point\",\"coordinates\": [-95.383056, 29.762778]\n    }\n  },\n  { \"_id\":\"Ruston\",\n    \"type\":\"Feature\",\n    \"geometry\": {\n      \"type\":\"Point\",\"coordinates\": [-92.640556, 32.529722]\n    }\n  }\n];\n\ndb.bulk({docs:cities}, function(er) {\n  if (er) {\n    throw er;\n  }\n\n  console.log('Inserted all cities');\n});\n~~~\n\nTo make a spatial index of these documents, create a design document with `\"st_indexes\"` populated with a JavaScript indexing function.\n\n~~~ js\n// Note, you can make a normal JavaScript function. It is not necessary\n// for you to convert it to a string as with other languages and tools.\nvar city_indexer = function(doc) {\n  if (doc.geometry && doc.geometry.coordinates) {\n    st_index(doc.geometry);\n  }\n};\n\nvar ddoc = {\n  _id: '_design/city',\n  st_indexes: {\n    city_points: {\n      index: city_indexer\n    }\n  }\n};\n\ndb.insert(ddoc, function (er, result) {\n  if (er) {\n    throw er;\n  }\n\n  console.log('Created design document with city index');\n});\n~~~\n\nTo query this index, use the database `.geo()` method. The first argument is the design document name, followed by the index name, and finally an object with your search parameters.\n\n~~~ js\n// Find the city within 25km (15 miles) of Lexington, MA.\nvar query = {\n  lat:42.447222, lon:-71.225,\n  radius:25000,\n  include_docs:true\n};\n\ndb.geo('city', 'city_points', query, function(er, result) {\n  if (er) {\n    throw er;\n  }\n\n  console.log('Cities found: %d', result.rows.length); // \"Cities found: 1\"\n  console.log(result.rows[0].doc._id);                 // \"Boston\"\n});\n~~~\n\n\n## Cookie Authentication\n\nCloudant supports making requests using Cloudant's [cookie authentication](https://docs.cloudant.com/authentication.html#cookie-authentication).\n\n~~~ js\nvar Cloudant = require('cloudant');\nvar username = 'nodejs'; // Set this to your own account\nvar password = process.env.cloudant_password;\nvar cloudant = Cloudant({account:username, password:password});\n\n// A global variable to store the cookies. Of course, you can store cookies any way you wish.\nvar cookies = {}\n\n\n// In this example, we authenticate using the same username/userpass as above.\n// However, you can use a different combination to authenticate as other users\n// in your database. This can be useful for using a less-privileged account.\ncloudant.auth(username, password, function(er, body, headers) {\n  if (er) {\n    return console.log('Error authenticating: ' + er.message);\n  }\n\n  console.log('Got cookie for %s: %s', username, headers['set-cookie']);\n\n  // Store the authentication cookie for later.\n  cookies[username] = headers['set-cookie'];\n});\n~~~\n\nTo reuse a cookie:\n\n~~~ js\n// (Presuming the \"cookies\" global from the above example is still in scope.)\n\nvar Cloudant = require('cloudant');\nvar username = 'nodejs'; // Set this to your own account\nvar other_cloudant = Cloudant({account:username, cookie:cookies[username]});\n\nvar alice = other_cloudant.db.use('alice')\nalice.insert({_id:\"my_doc\"}, function (er, body, headers) {\n  if (er) {\n    return console.log('Failed to insert into alice database: ' + er.message);\n  }\n\n  // Change the cookie if Cloudant tells us to.\n  if (headers && headers['set-cookie']) {\n    cookies[username] = headers['set-cookie'];\n  }\n});\n~~~\n\nGetting current session:\n\n~~~ js\n// (Presuming the \"cookie\" global from the above example is still in scope.)\n\nvar Cloudant = require('cloudant');\nvar username = 'nodejs'; // Set this to your own account\nvar cloudant = Cloudant({account:username, cookie:cookies[username]});\n\ncloudant.session(function(er, session) {\n  if (er) {\n    return console.log('oh noes!');\n  }\n\n  console.log('user is %s and has these roles: %j',\n    session.userCtx.name, session.userCtx.roles);\n});\n~~~\n\n\n\n## Advanced Features\n\n\n### Debugging\n\nIf you wish to see further information about what the nodejs-cloudant library is doing, then its debugging output can be sent to the console by simply setting an environement variable:\n\n    export DEBUG=cloudant\n    # then run your Node.js application\n\nDebug messages will be displayed to indicate each of the Cloudant-specific function calls.\n\nIf you want to see all debug messages, including calls made by the underlying `nano` library and HTTP requests/responses sent, then simply change the environment variable to\n\n    export DEBUG=cloudant,nano\n    # then run your Node.js application\n\nThis will log every request and response as in the following example:\n\n    nano { method: 'POST', headers: { 'content-type': 'application/json', accept: 'application/json' }, uri: 'https://xxxx:yyyyy@xxxx.cloudant.com/woof', body: '{\"a\":1,\"b\":2}' } +3ms\n    nano { err: null, body: { ok: true, id: '98f178cb8f4fe089f70fa4c92a0c84b1', rev: '1-25f9b97d75a648d1fcd23f0a73d2776e' }, headers: { 'x-couch-request-id': '8220322dee', location: 'http://reader.cloudant.com/woof/98f178cb8f4fe089f70fa4c92a0c84b1', date: 'Mon, 07 Sep 2015 13:06:01 GMT', 'content-type': 'application/json', 'cache-control': 'must-revalidate', 'strict-transport-security': 'max-age=31536000', 'x-content-type-options': 'nosniff;', connection: 'close', statusCode: 201, uri: 'https://xxxx:yyyy@xxxx.cloudant.com/woof' } }\n\nNote that credentials used in the requests are also written to the log.\n\nSimilarly, if you only want `nano`-level debugging:\n\n    export DEBUG=nano\n    # then run your Node.js application\n\nThe environment variable can also be defined on the same line as the Node.js script you are running e.g.:\n\n    DEBUG=\"*\" node myscript.js\n\n### Advanced Configuration\n\nBesides the account and password options, you can add an optionsl `requestDefaults` value, which will initialize Request (the underlying HTTP library) as you need it.\n\n~~~ js\n\n// Use an HTTP proxy to connect to Cloudant.\nvar options =\n  { \"account\"         : \"my_account\"\n  , \"password\"        : \"secret\"\n  , \"requestDefaults\": { \"proxy\": \"http://localhost:8080\" }\n  }\nvar cloudant = require('cloudant')(opts);\n// Now using the HTTP proxy...\n\n~~~\n\nPlease check [Request][request] for more information on the defaults. They support features like cookie jar, proxies, ssl, etc.\n\n### Pool size and open sockets\n\nA very important configuration parameter if you have a high traffic website and are using Cloudant is setting up the `pool.size`. By default, the node.js https global agent (client) has a certain size of active connections that can run simultaneously, while others are kept in a queue. Pooling can be disabled by setting the `agent` property in `requestDefaults` to false, or adjust the global pool size using:\n\n~~~ js\nvar https = require('https')\nhttps.globalAgent.maxSockets = 20\n~~~\n\nYou can also increase the size in your calling context using `requestDefaults` if this is problematic. refer to the [Request][request] documentation and examples for further clarification.\n\nHere is an example of explicitly using the keep alive agent (installed using `npm install agentkeepalive`), especially useful to limit your open sockets when doing high-volume access to Cloudant:\n\n~~~ js\nvar HttpsAgent = require('agentkeepalive').HttpsAgent;\nvar myagent = new HttpsAgent({\n    maxSockets: 50,\n    maxKeepAliveRequests: 0,\n    maxKeepAliveTime: 30000\n  });\nvar cloudant = require('cloudant')({account:\"me\", password:\"secret\", requestDefaults:{agent:myagent}});\n// Using Cloudant with myagent...\n~~~\n\n### Extending the Cloudant Library\n\nCloudant is minimalistic but you can add your own features with `cloudant.request(opts, callback)`\n\nFor example, to create a function to retrieve a specific revision of the `rabbit` document:\n\n~~~ js\nfunction getrabbitrev(rev, callback) {\n  cloudant.request({ db: 'alice',\n                     doc: 'rabbit',\n                     method: 'get',\n                     params: { rev: rev }\n                   }, callback)\n}\n\ngetrabbitrev('4-2e6cdc4c7e26b745c2881a24e0eeece2', function(err, body) {\n  if (!err)\n    console.log(body)\n})\n~~~\n\n### Pipes\n\nYou can pipe in Cloudant like in any other stream.  for example if our `rabbit` document has an attachment with name `picture.png` (with a picture of our white rabbit, of course!) you can pipe it to a `writable\nstream`\n\nSee the [Attachment Functions](#attachment-functions) section for examples of piping to and from attachments.\n\n\n## Development and Contribution\n\nThis is an open-source library, published under the Apache 2.0 license. We very much welcome contributions to the project so if you would like\nto contribute (even if it's fixing a typo in the README!) simply\n\n* fork this repository. Visit https://github.com/cloudant/nodejs-cloudant and click the \"Fork\" button.\n* commit changes into your copy of the repository\n* when you're ready, create a Pull Request to contribute your changes back into this project\n\nIf you're not confident about being able to fix a problem yourself, or want to simply [report an issue](https://github.com/cloudant/nodejs-cloudant/issues) then please.\n\n### Local Development\n\nTo join the effort developing this project, start from our GitHub page: https://github.com/cloudant/nodejs-cloudant\n\nFirst clone this project from GitHub, and then install its dependencies using npm.\n\n    $ git clone https://github.com/cloudant/nodejs-cloudant\n    $ npm install\n\n### Test Suite\n\nWe use npm to handle running the test suite. To run the comprehensive test suite, just run `npm test`.\n\nor after adding a new test you can run it individually (with verbose output) using:\n\n~~~ sh\nnpm test-verbose\n~~~\n\nThis runs against a local \"mock\" web server, called Nock. However the test suite can also run against a live Cloudant service. I have registered \"nodejs.cloudant.com\" for this purpose.\n\n~~~ sh\n    $ npm test-live\n~~~\n\nGet the password from Jason somehow, and set it a file called `.env` at the root of this project:\n\n    cloudant_password=thisisthepassword\n\n### Using in Other Projects\n\nIf you work on this project plus another one, your best bet is to clone from GitHub and then *link* this project to your other one. With linking, your other project depends on this one; but instead of a proper install, npm basically symlinks this project into the right place.\n\nGo to this project and \"link\" it into the global namespace (sort of an \"export\").\n\n    $ cd cloudant\n    $ npm link\n    /Users/jhs/.nvm/v0.10.25/lib/node_modules/cloudant -> /Users/jhs/src/cloudant/nodejs-cloudant\n\nGo to your project and \"link\" it into there (sort of an \"import\").\n\n    $ cd ../my-project\n    $ npm link cloudant\n    /Users/jhs/src/my-project/node_modules/cloudant -> /Users/jhs/.nvm/v0.10.25/lib/node_modules/cloudant -> /Users/jhs/src/cloudant/nodejs-cloudant\n\nNow your project has the dependency in place, however you can work on both of them in tandem.\n\n### Security Note\n\n**DO NOT hard-code your password and commit it to Git**. Storing your password directly in your source code (even in old commits) is a serious security risk to your data. Whoever gains access to your software will now also have read, write, and delete access to your data. Think about GitHub security bugs, or contractors, or disgruntled employees, or lost laptops at a conference. If you check in your password, all of these situations become major liabilities. (Also, note that if you follow these instructions, the `export` command with your password will likely be in your `.bash_history` now, which is kind of bad. However, if you input a space before typing the command, it will not be stored in your history.)\n\nHere is simple but complete example of working with data:\n\n~~~ js\nvar Cloudant = require('cloudant')\n\nvar me = 'nodejs' // Set this to your own account\nvar password = process.env.cloudant_password\n\nCloudant({account:me, password:password}, function(er, cloudant) {\n  if (er)\n    return console.log('Error connecting to Cloudant account %s: %s', me, er.message)\n\n  // Clean up the database we created previously.\n  cloudant.db.destroy('alice', function() {\n    // Create a new database.\n    cloudant.db.create('alice', function() {\n      // specify the database we are going to use\n      var alice = cloudant.db.use('alice')\n      // and insert a document in it\n      alice.insert({ crazy: true }, 'rabbit', function(err, body, header) {\n        if (err)\n          return console.log('[alice.insert] ', err.message)\n\n        console.log('you have inserted the rabbit.')\n        console.log(body)\n      })\n    })\n  })\n})\n~~~\n\nIf you run this example, you will see:\n\n    you have inserted the rabbit.\n    { ok: true,\n      id: 'rabbit',\n      rev: '1-6e4cb465d49c0368ac3946506d26335d' }\n\n## License\n\nCopyright (c) 2016 IBM Cloudant, Inc. All rights reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file\nexcept in compliance with the License. You may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under the\nLicense is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\neither express or implied. See the License for the specific language governing permissions\nand limitations under the License.\n\n\n## Reference\n\n* [Nano Library]\n* [Cloudant Documentation]\n* [Cloudant Query](https://docs.cloudant.com/cloudant_query.html)\n* [Cloudant Search](https://docs.cloudant.com/search.html)\n* [Authentication](https://docs.cloudant.com/authentication.html)\n* [Authorization](https://docs.cloudant.com/authorization.html)\n* [CORS](https://docs.cloudant.com/cors.html)\n* [Issues](https://github.com/cloudant/nodejs-cloudant/issues)\n* [Follow library](https://github.com/iriscouch/follow)\n\n[Nano Library]: https://github.com/cloudant-labs/cloudant-nano\n[Cloudant Documentation]: https://docs.cloudant.com/\n[Cloudant Query]: https://docs.cloudant.com/cloudant_query.html\n[Cloudant Search]: https://docs.cloudant.com/search.html\n[Cloudant Geospatial]: https://docs.cloudant.com/geo.html\n[Authentication]: https://docs.cloudant.com/authentication.html\n[Authorization]: https://docs.cloudant.com/authorization.html\n[geojson]: http://geojson.org/\n[CORS]: https://docs.cloudant.com/cors.html\n[Issues]: https://github.com/cloudant/nodejs-cloudant/issues\n[Follow library]: https://github.com/iriscouch/follow\n[request]: https://github.com/request/request\n","maintainers":[{"name":"glynnbird","email":"glynn.bird@gmail.com"},{"name":"jhs","email":"jason.h.smith@gmail.com"},{"name":"mikerhodes","email":"mike.rhodes@dx13.co.uk"},{"name":"smithsz","email":"sam.smith@uk.ibm.com"}],"time":{"modified":"2017-11-01T11:28:07.875Z","created":"2014-09-10T04:27:23.005Z","0.1.0":"2014-09-10T04:27:23.005Z","1.0.0-beta2":"2014-09-11T07:39:39.370Z","1.0.0-beta3":"2014-09-17T15:10:24.946Z","1.0.0":"2015-05-30T07:29:37.995Z","1.1.0":"2015-06-30T09:34:54.591Z","1.2.0":"2015-07-27T10:43:55.486Z","1.3.0":"2015-08-28T13:04:29.836Z","1.3.1":"2015-12-04T06:18:28.268Z","1.4.0":"2015-12-04T09:32:24.473Z","1.4.1":"2016-01-20T09:20:24.778Z","1.4.2":"2016-06-02T11:04:06.500Z","1.4.3":"2016-08-04T18:50:22.107Z","1.5.0":"2016-09-22T06:49:56.083Z","1.5.1":"2016-10-09T06:56:45.040Z","1.5.2":"2016-10-31T16:06:08.099Z","1.6.0":"2016-11-08T14:53:30.425Z","1.6.1":"2016-11-08T15:15:25.581Z","1.6.2":"2016-11-10T16:11:44.285Z","1.7.0":"2017-01-13T12:41:03.463Z","1.7.1":"2017-02-06T13:21:50.432Z","1.8.0":"2017-05-23T15:53:09.656Z","1.9.0":"2017-10-30T15:59:40.680Z","1.10.0":"2017-11-01T11:28:07.875Z"},"homepage":"http://github.com/cloudant/nodejs-cloudant","keywords":["cloudant","couchdb","json","nosql","database"],"repository":{"type":"git","url":"git+ssh://git@github.com/cloudant/nodejs-cloudant.git"},"author":{"name":"IBM Cloudant","email":"support@cloudant.com"},"bugs":{"url":"https://github.com/cloudant/nodejs-cloudant/issues"},"license":"Apache-2.0","readmeFilename":"README.md","users":{"luiz_aoqui":true,"hain":true,"zambon":true,"srl":true,"joelwallis":true,"tobitobitobi":true,"lassevolkmann":true,"vchouhan":true,"ycc.lit":true,"oldthunder":true,"leonzhao":true},"contributors":[{"name":"Glynn Bird","email":"glynn.bird@gmail.com"}],"_attachments":{},"_etag":"\"59f9afc7-129ad\"","_lastModified":"Wed, 1 Nov 2017 11:28:07 GMT"}